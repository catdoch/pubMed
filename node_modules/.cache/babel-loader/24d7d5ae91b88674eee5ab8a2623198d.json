{"ast":null,"code":"var _jsxFileName = \"/Users/cdocherty/Projects/pubMed/app/src/components/search-button.jsx\";\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getCount, updateData, getLoading } from '../redux/actions'; // interface Props {\n//     value?: string;\n// }\n\nconst SearchButton = props => {\n  const listJournalsEvent = async ids => {\n    const idJoin = ids.join(',');\n    const response = await fetch(`https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?db=pubmed&retmode=json&id=${idJoin}`);\n    const json = await response.json();\n    dispatch(updateData(json.result));\n  };\n\n  const sendEvent = async (value, dispatch) => {\n    var _json$esearchresult;\n\n    dispatch(getLoading(true));\n    const response = await fetch(`https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esearch.fcgi?db=pubmed&retmax=20&retmode=json&term=${value}`);\n    const json = await response.json();\n    dispatch(getCount(json));\n    dispatch(getLoading(false));\n    listJournalsEvent(json === null || json === void 0 ? void 0 : (_json$esearchresult = json.esearchresult) === null || _json$esearchresult === void 0 ? void 0 : _json$esearchresult.idlist);\n  };\n\n  const {\n    value\n  } = props;\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"input-search\",\n    onClick: () => {\n      sendEvent(value, dispatch);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Search now\");\n};\n\nexport default SearchButton;","map":{"version":3,"sources":["/Users/cdocherty/Projects/pubMed/app/src/components/search-button.jsx"],"names":["React","useDispatch","getCount","updateData","getLoading","SearchButton","props","listJournalsEvent","ids","idJoin","join","response","fetch","json","dispatch","result","sendEvent","value","esearchresult","idlist"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,UAA/B,QAAiD,kBAAjD,C,CAEA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5B,QAAMC,iBAAiB,GAAG,MAAMC,GAAN,IAAc;AACpC,UAAMC,MAAM,GAAGD,GAAG,CAACE,IAAJ,CAAS,GAAT,CAAf;AAEA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,yFAAwFH,MAAO,EAAjG,CAA5B;AACA,UAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AAEAC,IAAAA,QAAQ,CAACX,UAAU,CAACU,IAAI,CAACE,MAAN,CAAX,CAAR;AACH,GAPD;;AASA,QAAMC,SAAS,GAAG,OAAOC,KAAP,EAAcH,QAAd,KAA2B;AAAA;;AACzCA,IAAAA,QAAQ,CAACV,UAAU,CAAC,IAAD,CAAX,CAAR;AACA,UAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAE,oGAAmGK,KAAM,EAA3G,CAA5B;AACA,UAAMJ,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AACAC,IAAAA,QAAQ,CAACZ,QAAQ,CAACW,IAAD,CAAT,CAAR;AACAC,IAAAA,QAAQ,CAACV,UAAU,CAAC,KAAD,CAAX,CAAR;AACAG,IAAAA,iBAAiB,CAACM,IAAD,aAACA,IAAD,8CAACA,IAAI,CAAEK,aAAP,wDAAC,oBAAqBC,MAAtB,CAAjB;AACH,GAPD;;AASA,QAAM;AAAEF,IAAAA;AAAF,MAAYX,KAAlB;AACA,QAAMQ,QAAQ,GAAGb,WAAW,EAA5B;AAEA,sBACI;AACI,IAAA,SAAS,EAAC,cADd;AAEI,IAAA,OAAO,EAAE,MAAM;AACXe,MAAAA,SAAS,CAACC,KAAD,EAAQH,QAAR,CAAT;AACH,KAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ;AASH,CA/BD;;AAiCA,eAAeT,YAAf","sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getCount, updateData, getLoading } from '../redux/actions';\n\n// interface Props {\n//     value?: string;\n// }\n\nconst SearchButton = (props) => {\n    const listJournalsEvent = async(ids) => {\n        const idJoin = ids.join(',');\n\n        const response = await fetch(`https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?db=pubmed&retmode=json&id=${idJoin}`);\n        const json = await response.json();\n        \n        dispatch(updateData(json.result));\n    };\n\n    const sendEvent = async (value, dispatch) => {\n        dispatch(getLoading(true));\n        const response = await fetch(`https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esearch.fcgi?db=pubmed&retmax=20&retmode=json&term=${value}`);\n        const json = await response.json();\n        dispatch(getCount(json));\n        dispatch(getLoading(false));\n        listJournalsEvent(json?.esearchresult?.idlist);\n    };\n\n    const { value } = props;\n    const dispatch = useDispatch();\n\n    return (\n        <button\n            className=\"input-search\"\n            onClick={() => {\n                sendEvent(value, dispatch);\n            }}>\n            Search now\n        </button>\n    );\n};\n\nexport default SearchButton;\n"]},"metadata":{},"sourceType":"module"}