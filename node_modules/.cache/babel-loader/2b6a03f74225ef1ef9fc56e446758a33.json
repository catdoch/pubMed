{"ast":null,"code":"var _jsxFileName = \"/Users/cdocherty/Projects/pubMed/app/src/components/input.tsx\";\nimport React, { Component } from 'react';\n/**\n * NOTE seems @types/react is not handling defaultProps for\n * class components properly, so we take following approach.\n */\n\nconst defaultProps = {\n  defaultValue: '',\n  inline: false,\n  inputRef: () => {},\n  onInput: () => {},\n  type: 'text'\n}; // Refine e.g. `inline?: boolean` to `inline: boolean`.\n\nclass Input extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      hasValue: !!this.props.defaultValue\n    };\n    this.input = void 0;\n\n    this.handleClear = () => {\n      this.input.value = '';\n      const event = new Event('input', {\n        bubbles: true\n      });\n      this.input.dispatchEvent(event);\n      this.input.focus();\n    };\n\n    this.handleInput = event => {\n      this.setState({\n        hasValue: !!this.input.value\n      });\n      const {\n        onInput\n      } = this.props;\n      onInput(event);\n    };\n\n    this.handleInputRef = element => {\n      this.input = element;\n      const {\n        inputRef\n      } = this.props;\n      inputRef(element);\n    };\n  }\n\n  render() {\n    const {\n      id,\n      inline,\n      name = id,\n      type,\n      inputRef: _,\n      placeholder,\n      errorMessages: __,\n      ...props\n    } = this.props;\n    const {\n      hasValue\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-input-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, props, {\n      type: \"input\",\n      id: id,\n      placeholder: placeholder,\n      name: name,\n      onChange: this.handleInput,\n      ref: this.handleInputRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    })), hasValue && /*#__PURE__*/React.createElement(\"button\", {\n      \"aria-label\": \"Clear input\",\n      type: \"button\",\n      className: \"input-clear\",\n      onClick: this.handleClear,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, \"x\"));\n  }\n\n}\n\nInput.defaultProps = defaultProps;\nexport default Input;","map":{"version":3,"sources":["/Users/cdocherty/Projects/pubMed/app/src/components/input.tsx"],"names":["React","Component","defaultProps","defaultValue","inline","inputRef","onInput","type","Input","state","hasValue","props","input","handleClear","value","event","Event","bubbles","dispatchEvent","focus","handleInput","setState","handleInputRef","element","render","id","name","_","placeholder","errorMessages","__"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA;;;;;AAkBA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE,EADG;AAEjBC,EAAAA,MAAM,EAAE,KAFS;AAGjBC,EAAAA,QAAQ,EAAE,MAAM,CAAE,CAHD;AAIjBC,EAAAA,OAAO,EAAE,MAAM,CAAE,CAJA;AAKjBC,EAAAA,IAAI,EAAE;AALW,CAArB,C,CAOA;;AAOA,MAAMC,KAAN,SAAoBP,SAApB,CAA4C;AAAA;AAAA;AAAA,SAIxCQ,KAJwC,GAIhC;AACJC,MAAAA,QAAQ,EAAE,CAAC,CAAC,KAAKC,KAAL,CAAWR;AADnB,KAJgC;AAAA,SAShCS,KATgC;;AAAA,SAWxCC,WAXwC,GAW1B,MAAM;AAChB,WAAKD,KAAL,CAAWE,KAAX,GAAmB,EAAnB;AACA,YAAMC,KAAK,GAAG,IAAIC,KAAJ,CAAU,OAAV,EAAmB;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAnB,CAAd;AACA,WAAKL,KAAL,CAAWM,aAAX,CAAyBH,KAAzB;AACA,WAAKH,KAAL,CAAWO,KAAX;AACH,KAhBuC;;AAAA,SAkBxCC,WAlBwC,GAkBzBL,KAAD,IAAgB;AAC1B,WAAKM,QAAL,CAAc;AACVX,QAAAA,QAAQ,EAAE,CAAC,CAAC,KAAKE,KAAL,CAAWE;AADb,OAAd;AAGA,YAAM;AAAER,QAAAA;AAAF,UAAc,KAAKK,KAAzB;AACAL,MAAAA,OAAO,CAACS,KAAD,CAAP;AACH,KAxBuC;;AAAA,SA0BxCO,cA1BwC,GA0BtBC,OAAD,IAA+B;AAC5C,WAAKX,KAAL,GAAaW,OAAb;AACA,YAAM;AAAElB,QAAAA;AAAF,UAAe,KAAKM,KAA1B;AACAN,MAAAA,QAAQ,CAACkB,OAAD,CAAR;AACH,KA9BuC;AAAA;;AAgCxCC,EAAAA,MAAM,GAAG;AACL,UAAM;AACFC,MAAAA,EADE;AAEFrB,MAAAA,MAFE;AAGFsB,MAAAA,IAAI,GAAGD,EAHL;AAIFlB,MAAAA,IAJE;AAKFF,MAAAA,QAAQ,EAAEsB,CALR;AAMFC,MAAAA,WANE;AAOFC,MAAAA,aAAa,EAAEC,EAPb;AAQF,SAAGnB;AARD,QASF,KAAKA,KATT;AAWA,UAAM;AAAED,MAAAA;AAAF,QAAe,KAAKD,KAA1B;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,+CACQE,KADR;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,EAAE,EAAEc,EAHR;AAII,MAAA,WAAW,EAAEG,WAJjB;AAKI,MAAA,IAAI,EAAEF,IALV;AAMI,MAAA,QAAQ,EAAE,KAAKN,WANnB;AAOI,MAAA,GAAG,EAAE,KAAKE,cAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,EAUKZ,QAAQ,iBACL;AACI,oBAAW,aADf;AAEI,MAAA,IAAI,EAAC,QAFT;AAGI,MAAA,SAAS,EAAC,aAHd;AAII,MAAA,OAAO,EAAE,KAAKG,WAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAXR,CADJ;AAqBH;;AAnEuC;;AAAtCL,K,CAEKN,Y,GAAeA,Y;AAoE1B,eAAeM,KAAf","sourcesContent":["import React, { Component } from 'react';\n\n/**\n * NOTE seems @types/react is not handling defaultProps for\n * class components properly, so we take following approach.\n */\ninterface OwnProps {\n    defaultValue?: string;\n    id: string;\n    inline?: boolean;\n    placeholder?: string;\n    inputRef?: (...args: any[]) => void;\n    name?: string;\n    onInput?: (...args: any[]) => void;\n    type?: string;\n    /**\n     * Can be passed down from `Field` component.\n     */\n    errorMessages?: any;\n}\nconst defaultProps = {\n    defaultValue: '',\n    inline: false,\n    inputRef: () => {},\n    onInput: () => {},\n    type: 'text',\n};\n// Refine e.g. `inline?: boolean` to `inline: boolean`.\ntype Props = OwnProps & typeof defaultProps;\n\ninterface State {\n    hasValue: boolean;\n}\n\nclass Input extends Component<Props, State> {\n    // eslint-disable-next-line react/sort-comp\n    static defaultProps = defaultProps;\n\n    state = {\n        hasValue: !!this.props.defaultValue,\n    };\n\n    /** Initialised in `handleInputRef`. */\n    private input!: HTMLInputElement;\n\n    handleClear = () => {\n        this.input.value = '';\n        const event = new Event('input', { bubbles: true });\n        this.input.dispatchEvent(event);\n        this.input.focus();\n    };\n\n    handleInput = (event: any) => {\n        this.setState({\n            hasValue: !!this.input.value,\n        });\n        const { onInput } = this.props;\n        onInput(event);\n    };\n\n    handleInputRef = (element: HTMLInputElement) => {\n        this.input = element;\n        const { inputRef } = this.props;\n        inputRef(element);\n    };\n\n    render() {\n        const {\n            id,\n            inline,\n            name = id,\n            type,\n            inputRef: _,\n            placeholder,\n            errorMessages: __,\n            ...props\n        } = this.props;\n\n        const { hasValue } = this.state;\n\n        return (\n            <div className=\"form-input-container\">\n                <input\n                    {...props}\n                    type=\"input\"\n                    id={id}\n                    placeholder={placeholder}\n                    name={name}\n                    onChange={this.handleInput}\n                    ref={this.handleInputRef}\n                />\n                {hasValue && (\n                    <button\n                        aria-label=\"Clear input\"\n                        type=\"button\"\n                        className=\"input-clear\"\n                        onClick={this.handleClear}\n                    >x</button>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}